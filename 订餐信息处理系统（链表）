#include<stdio.h>
#include<stdlib.h>
#include<string.h>
typedef struct time
{
    int year;
    int month;
    int day;
}TIME;

typedef struct data
{
    char name[10];
    TIME time;
    int number;
    int tel;
}DATA;

typedef struct link
{
    DATA data;
    struct link*next;
}LINK;

LINK* CreatAndInput(LINK* head)
{
    LINK*p=NULL,*pr=head;
    p=(LINK*)malloc(sizeof(LINK));
    p->next=NULL;//p的下一节点为NULL!!!!!
    if(NULL==p)
    {
        printf("分配空间失败\n");
        exit(-1);
    }
    if(NULL==head)//头文件不存在
    {
        head=p;
    }
    else//头文件存在
    {

        while(NULL!=pr->next)
        {
            pr=pr->next;
        }
        pr->next=p;//把新节点p接到尾部
    }

    printf("请输入姓名：");
    scanf("%s",p->data.name);
    printf("请输入用餐时间(年月日)\n");
    printf("年:");
    scanf("%d",&(p->data.time.year));
    printf("月:");
    scanf("%d",&(p->data.time.month));
    printf("日:");
    scanf("%d",&(p->data.time.day));
    printf("请输入用餐人数：");
    scanf("%d",&(p->data.number));
    printf("请输入电话号码：");
    scanf("%d",&(p->data.tel));
    return head;
}

void Display(LINK*head)
{
    LINK*p=head;
    int len=1;
    while(NULL!=p)//当p为空时，循环结束
    {
        printf("第%d位订餐者姓名：%s\n",len,p->data.name);
        printf("订餐时间：%d-%d-%d\n",p->data.time.year,\
                                      p->data.time.month,\
                                      p->data.time.day);
        printf("订餐人数：%d\n",p->data.number);
        printf("电话号码：%d\n",head->data.tel);
        printf("输出成功\n");
        p=p->next;
        len++;
    }
    if(NULL==p)
    {
        printf("还未存入信息\n");
    }
}

LINK* Conserve(LINK* head)
{
    FILE *fp;
    LINK* p=head;
    fp=fopen("D://MyPoject","a+");
    if(fp==NULL)
    {
        printf("打开失败\n");
        exit(-1);
    }
    while(NULL!=p)
    {
        fprintf(fp,"%s\n",p->data.name);
        fprintf(fp,"%d",p->data.time.year);
        fprintf(fp,"%d",p->data.time.month);
        fprintf(fp,"%d",p->data.time.day);
        fprintf(fp,"%d",p->data.number);
        fprintf(fp,"%d",p->data.tel);
        p=p->next;
    }
    fclose(fp);
    return head;
}

LINK* Delte(LINK* head)
{
		char name1[10];
		printf("请输入待删除的客户名\n");
        scanf("%s",name1);
		LINK* p=head,*pr=NULL;
		if(p==NULL)
		{
			printf("节点不存在");
			exit(-1);
		}
		while(strcmp((p->data.name),name1)!=0||p->next!=NULL)
		{
			pr=p;
			p=p->next;
		}
		if(strcmp((p->data.name),name1)==0)
		{
			if(p==head)//头节点
			{
				head=head->next;
			}
			else//非头节点
			{
				pr->next=p->next;
			}
			free(p);//？
		}
		else
		{
			printf("要删除的节点不存在");
			exit(-1);
		}
		return head;
}

int ChangeTime(LINK* head,char name2[],int year2,int month2,int day2)
{
    LINK* p=head;
    while(strcmp((p->data.name),name2)!=0||p->next!=NULL)
    {
        p=p->next;
    }
    if(strcmp((p->data.name),name2)==0)
    {
        p->data.time.year=year2;
        p->data.time.month=month2;
        p->data.time.day=day2;
    }
    else
        printf("删除的节点不存在\n");
    return 1;
}

int ChangeNum(LINK* head,char name2[],int number2)
{
    LINK* p=head;
    while(strcmp((p->data.name),name2)!=0||p->next!=NULL)
    {
        p=p->next;
    }
    if(strcmp((p->data.name),name2)==0)
    {
        p->data.number=number2;
    }
    else
        printf("删除的节点不存在\n");
    return 2;
}

int ChangeTel(LINK* head,char name2[],int tel4)
{
    LINK* p=head;
    while(strcmp((p->data.name),name2)!=0||p->next!=NULL)
    {
        p=p->next;
    }
    if(strcmp((p->data.name),name2)==0)
    {
        p->data.tel=tel4;
    }
    else
        printf("删除的节点不存在\n");
    return 3;
}

int Change(LINK* head)
{
    LINK* p=head;
    int jump;
    int key4,mima=12345,mima1,flag=1,flag1=1;
    int year1,month1,day1,number1,tel3;
    char name1[10];
    printf("进入系统前请先输入密码\n");
    scanf("%d",&mima1);
    while(mima1!=mima)
    {
        printf("输入错误，请重新输入\n");
        scanf("%d",&mima1);
    }
    printf("密码正确\n");
    do
    {
        printf("请输入要修改的客户的名字：\n");
        scanf("%s",name1);
        do
        {
            if(strcmp((p->data.name),name1)==0)
            {
                flag1=0;
                flag=0;
            }
            else if(p->next!=NULL)//？
                p=p->next;
            else
            {
                printf("查无此人，请重新输入");
                flag1=0;
                flag=1;
            }
        }while(flag1);
    }while(flag);
    printf("请选择要修改哪一项：(根据姓名来修改1.订餐时间，2.订餐人数，3.电话号码)\n");
    scanf("%d",&key4);
    switch(key4)
    {
    case 1:
        printf("请输入修改信息：\n");
        scanf("%d %d %d",&year1,&month1,&day1);
        jump=ChangeTime(head,name1,year1,month1,day1);
        break;
    case 2:
        printf("请输入修改信息：\n");
        scanf("%d",&number1);
        jump=ChangeNum(head,name1,number1);
        break;
    case 3:
        printf("请输入修改信息：\n");
        scanf("%d",&tel3);
        jump=ChangeTel(head,name1,tel3);
        break;
    default:
        printf("输入错误，请重新输入\n");

    }
    return jump;
}

int LookTel(LINK* head,int tel1)
{
    LINK* p=head;
    while(p->data.tel!=tel1||NULL!=p->next)
    {
        p=p->next;
    }
    if(p->data.tel==tel1)
    {
        printf("该位订餐者姓名：%s\n",p->data.name);
        printf("订餐时间：%d-%d-%d\n",p->data.time.year,\
                                      p->data.time.month,\
                                      p->data.time.day);
        printf("订餐人数：%d\n",p->data.number);
        printf("电话号码：%d\n",head->data.tel);
        return 2;
    }
    else
    {
        printf("查无此人\n");
    }
}

int LookName(LINK* head,char name1[])
{
    LINK* p=head;
    while(strcmp((p->data.name),name1)!=0||NULL!=p->next)
    {
        p=p->next;
    }
    if(strcmp((p->data.name),name1)==0)
    {
        printf("该位订餐者姓名：%s\n",p->data.name);
        printf("订餐时间：%d-%d-%d\n",p->data.time.year,\
                                      p->data.time.month,\
                                      p->data.time.day);
        printf("订餐人数：%d\n",p->data.number);
        printf("电话号码：%d\n",head->data.tel);
        return 1;
    }
    else
    {
        printf("查无此人\n");
    }
}

int Look(LINK* head)
{
    int key3,tel1,flag,jump;
    char c1=1;
    char name1[10];
    printf("请选择按\n0.退出\n1.电话\n2.名字\n");
    scanf("%d",&key3);
    do
    {
        switch(key3)
        {
        case 1:
            printf("请输入要查询的用户的电话：\n");
            scanf("%d",&tel1);
            jump=LookTel(head,tel1);
            break;
        case 2:
            printf("请输入要查询的用户的名字：\n");
            scanf("%s",name1);
            jump=LookName(head,name1);
            break;
        case 0:
            {
                printf("确认是否退出(y/Y)\n");
                scanf("%c",&c1);
                if(c1=='y'||c1=='Y') flag=0;
                break;
            }
        default:
            printf("输入错误，请重新输入\n");
        }
    }while(flag);
    return jump;
}

void Menu(LINK*head)//倒数第二
{
    int flag=1;
    char key,c,jump=0;
    do
    {
        printf("———————————菜单————-——————-—\n");
        printf("\t 请选择系统功能项\n");
        printf("\t a. 订餐信息录入\n");
        printf("\t b. 订餐信息显示\n");
        printf("\t c. 订餐信息保存\n");
        printf("\t d. 订餐信息删除 (根据客户名)\n");
        printf("\t e. 订餐信息修改 (根据客户名)（要求先输入密码：12345）\n");
        printf("\t f. 订餐信息查询\n");
        printf("\t   1. 按电话查询\n");
        printf("\t   2. 按姓名查询\n");
        printf("\t g. 退出系统\n");
        printf("—————————————————————-———\n");
        if(jump==1||jump==2||jump==3)
        {
            scanf("%c",&key);
            getchar();
            getchar();
            jump=0;
        }
        else
        {
            scanf("%c",&key);
            getchar();
        }
        switch(key)
        {
        case 'a':
            head=CreatAndInput(head);
            printf("录入成功\n");
            getchar();
            break;
        case 'b':
            Display(head);
            break;
        case 'c':
            head=Conserve(head);
            printf("保存成功\n");
            break;
        case 'd':
        	head=Delte(head);
        	printf("删除成功\n");
            break;
        case 'e':
            jump=Change(head);
            printf("修改成功\n");
            break;
        case 'f':
            jump=Look(head);
            printf("如上\n");
            break;
        case 'g':
            printf("确定是否退出系统？\n");
            scanf("%c",&c);
            getchar();
            if(c=='y'||c=='Y')
                flag=0;
            else
                printf("退出失败，请重新选择\n");
            break;
        default:
            printf("输入错误，请重新输入！\n");
            break;
        }
    }while(flag);
    printf("退出成功\n");
}

int main()//倒数第一
{
    LINK *head=NULL;
    Menu(head);
    return 0;
}




